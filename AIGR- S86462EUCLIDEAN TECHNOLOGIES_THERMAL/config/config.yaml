# Model Configuration
model:
  name: "SwinUNet"  # Options: SwinUNet, ConvNeXtUNet
  backbone: "swin_tiny"  # swin_tiny, swin_small, swin_base, convnext_tiny
  num_classes: 2  # background, anomaly
  input_channels: 1  # thermal band
  pretrained: true
  dropout: 0.1
  
  # Advanced model features
  use_attention: true
  use_deep_supervision: true
  use_progressive_resizing: true
  compile_model: true  # PyTorch 2.0 compilation
  
  # Temporal fusion (for video)
  use_temporal: false
  temporal_length: 5
  temporal_method: "convlstm"  # convlstm, attention
  
  # Anomaly scoring
  use_patchcore: false
  patch_size: 3
  memory_bank_size: 1000

# Dataset Configuration
dataset:
  name: "thermal_anomaly"
  data_dir: "data/"
  image_size: [256, 256]
  normalize: true
  augmentation: false
  
  # Data splits
  train_split: 0.7
  val_split: 0.15
  test_split: 0.15
  
  # Temperature range for normalization (Celsius)
  temperature_range: [-10.0, 50.0]
  
  # Supported formats
  formats: [".tif", ".he5", ".png", ".jpg", ".mat"]
  thermal_bands: ["ST_B10", "thermal", "band10"]

# Training Configuration
training:
  epochs: 5
  batch_size: 1
  learning_rate: 1e-4
  weight_decay: 1e-5
  scheduler: "cosine"  # cosine, step, plateau
  
  # Advanced optimizations
  use_amp: true
  gradient_clip: 1.0
  gradient_accumulation_steps: 4
  warmup_epochs: 1
  early_stopping_patience: 3
  
  # Advanced techniques
  use_ema: true  # Exponential Moving Average
  label_smoothing: 0.1
  mixup_alpha: 0.2
  cutmix_alpha: 1.0
  
  # Loss function
  loss_function: "combined"  # bce, dice, focal, combined
  loss_weights:
    bce: 0.5
    dice: 0.3
    focal: 0.2
  
  # Early stopping
  patience: 15
  min_delta: 1e-4

# Validation Configuration
validation:
  val_frequency: 5  # epochs
  save_best: true
  metric: "f1_score"  # f1_score, roc_auc, pr_auc
  
# Inference Configuration
inference:
  model_path: "outputs/models/best_model.pth"
  batch_size: 16
  tta: false  # test-time augmentation
  threshold: 0.5
  
  # Post-processing
  use_crf: false
  morphology: true
  min_area: 100  # pixels
  
  # Output settings
  save_probability: true
  save_overlay: true
  overlay_alpha: 0.6

# Hardware Configuration
hardware:
  device: "cuda"
  gpu_ids: [0]
  num_workers: 8
  pin_memory: true
  mixed_precision: true
  
  # Performance monitoring
  profile_memory: false
  benchmark: true

# Logging Configuration
logging:
  log_dir: "outputs/logs/"
  experiment_name: "thermal_anomaly_detection"
  save_frequency: 10  # epochs
  log_images: true
  max_images: 8
  
  # Weights & Biases
  use_wandb: false
  wandb_project: "thermal-anomaly-detection"
  wandb_entity: "euclidean-technologies"

# Export Configuration
export:
  startup_name: "EuclideanTechnologies"
  output_dir: "submission/"
  
  # Format settings
  geotiff_compression: "lzw"
  png_dpi: 300
  excel_engine: "openpyxl"
  
  # Metadata
  author: "Euclidean Technologies"
  description: "Deep learning thermal anomaly detection"
  contact: "contact@euclideantech.ai"

# Evaluation Configuration
evaluation:
  metrics: ["accuracy", "f1_score", "precision", "recall", "roc_auc", "pr_auc"]
  confidence_threshold: [0.3, 0.5, 0.7]
  iou_threshold: 0.5
  
  # Visualization
  plot_confusion_matrix: true
  plot_roc_curve: true
  plot_pr_curve: true
  save_predictions: true